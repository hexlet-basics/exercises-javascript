---

name: Ошибки при работе с переменными
theory: |

  Порядок следования инструкций в коде с переменными играет огромное значение. Переменная должна быть определена (но не обязательно инициализированна) до того как будет использована. Ниже пример ошибки, которую очень часто допускают новички:

  ```javascript
  // Uncaught ReferenceError: greeting is not defined
  console.log(greeting);
  let greeting = 'Father!';
  ```

  Запуск программы, выше завершается с ошибкой _ReferenceError: greeting is not defined_. _ReferenceError_ - это ошибка обращения, она означает, что в коде используется имя (говорят идентификатор), который не определен. Причем в самой ошибке об этом говорят прямо: _greeting is not defined_, что переводится как _greeting не определен_. Кроме неправильного порядка определения, в JavaScript встречаются банальные опечатки, причем как при использовании переменной, так и при ее объявлении.

  Количество подобных ошибок уменьшается за счет использования правильно настроенного редактора. Такой редактор подсвечивает имена, которые используются без объявления и предупреждает о возможных проблемах.

  Еще одна распространенная ошибка, попытаться объявить уже объявленную переменную:

  ```javascript
  let greeting = 'Father!';
  let greeting = 'Father!';
  ```

  Так делать нельзя. Придется создать новую переменную.

instructions: |

  Найдите в программе необъявленную переменную и объявите ее присвоив ей значение 'Dragon';

tips: []

definitions:
  - name: Переменная
    description: Способ сохранить информацию и дать ей имя для последующего использования в коде.
