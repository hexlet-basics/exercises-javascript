---

name: Логический тип
theory: |

  Кроме арифметических операций со школы нам известны операции сравнения. Например, `5 > 4`. Это звучит как вопрос: «5 больше 4?». В данном случае ответ «да». В других случаях ответом может быть «нет» (например, для `3 < 1`).

  Список операций сравнения:

  * `<` меньше
  * `<=` меньше или равно
  * `>` больше
  * `>=` больше или равно
  * `===` равно
  * `!==` не равно

  _(Небольшая ремарка: для равенства и неравенства также существуют операторы `==` и `!=`, которые мы не будем использовать из-за потенциальной опасности. Мы поговорим об этом в будущих уроках)._

  Эти операции применимы не только к числам. Например, с помощью оператора равенства можно сравнить строки:
  `password === text` — это сравнение идентичности строк, записанных в разных переменных.

  Логическая операция типа `5 > 4` или `password === text` — это выражение, и его результат — специальное значение `true` («истина») или `false` («ложь»). Это новый для нас тип данных — bool.

  Наряду со строками (string) и целыми и рациональными числами, **тип bool (булеан) — это один из примитивных типов данных в JavaScript**.

  ---

  Попробуем написать примитивную функцию, которая принимает на вход возраст ребенка и определяет, младенец ли он. Младенцами считаются дети до года:

  ```javascript
  const isInfant = (age) => age < 1;
  ```

  Пользуемся тем фактом, что любая операция — это выражение, поэтому единственной строчкой функции пишем «вернуть то значение, которое получится в результате сравнения `age < 1`».

  В зависимости от пришедшего аргумента, сравнение будет либо истинным (`true`) либо ложным (`false`), и `return` вернёт этот результат.

  ```javascript
  const isInfant = (age) => age < 1;

  console.log(isInfant(3));
  ```

  <pre class='hexlet-basics-output'>false</pre>

  А теперь проверим ребенка, которому полгода:

  ```javascript
  console.log(isInfant(0.5));
  ```

  <pre class='hexlet-basics-output'>true</pre>


instructions: |

  Напишите функцию `isPensioner`, которая принимает один параметр — возраст человека — и проверяет, является ли он пенсионным. Пенсионером считается человек, достигший возраста 60 лет и больше.

  Примеры вызова:

  ```javascript
  isPensioner(75); // true
  isPensioner(18); // false
  ```

definitions:
  - name: "Логический тип (bool)"
    description: "тип данных с двумя возможными значениями: true (истина) и false (ложь)."
