---

name: Обход строк
theory: |

  Циклы подходят не только для обработки чисел, но и при работе со строками. В первую очередь благодаря возможности получить конкретный символ по его индексу. Ниже пример кода, который распечатывает буквы каждого слова на отдельной строке:

  ```javascript
  const printNameBySymbol = (name) => {
    let i = 0;
    // Такая проверка будет выполняться до конца строки
    // включая последний символ. Его индекс `length - 1`.
    while (i < name.length) {
      // Обращемя к символу по индексу
      console.log(name[i]);
      i = i + 1;
    }
  };

  const name = 'Arya';
  printNameBySymbol(name);
  // 'A'
  // 'r'
  // 'y'
  // 'a'
  ```

  Самое главное в этом коде, поставить правильное условие в `while`. Это можно сделать сразу двумя способами: `i < name.length` или `i <= name.length - 1`. Оба эти способа приводят к одному результату, но второй явно проще и предпочительнее в использовании.

instructions: |

  Реализуйте функцию `printReversedNameBySymbol()` которая печатает переданное слово посимвольно, как в примере из теории, но делает это в обратном порядке.

  ```javascript
  const name = 'Arya';

  printReversedNameBySymbol(name);
  // 'a'
  // 'y'
  // 'r'
  // 'A'
  ```

tips: []
