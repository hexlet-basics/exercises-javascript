---

name: Iterating over a string
theory: |

  You can use loops to process strings as well as numbers. Mainly due to the ability to retrieve a specific character by its index. Below is an example of code that prints each letter of a word on a single line:

  ```javascript
  const printNameBySymbol = (name) => {
    let i = 0;
    // This test works until a string ends
    // including the last character. The last index is `length - 1`.
    while (i < name.length) {
      // Get a character by its index
      console.log(name[i]);
      i = i + 1;
    }
  };

  const name = 'Arya';
  printNameBySymbol(name);
  // => 'A'
  // => 'r'
  // => 'y'
  // => 'a'
  ```

  Correct test condition for `while` loop is essential in this code. You can do it two ways: `i < name.length` or `i <= name.length - 1`. Both are leading to the same result.

instructions: |

  Write a function `printReversedWordBySymbol()` which takes a word as input and prints it by character, just as in the theory, but does it in reverse order.

  ```javascript
  const word = 'Hexlet';

  printReversedWordBySymbol(word);
  // => 't'
  // => 'e'
  // => 'l'
  // => 'x'
  // => 'e'
  // => 'H'
  ```

tips: []
