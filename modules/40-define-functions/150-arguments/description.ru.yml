---

name: Передача нескольких аргументов
theory: |

  Аргументов может быть несколько. В таком случае в определении функции мы делаем то же самое, что в вызове: просто указываем аргументы через запятую.

  Полный пример определения функции с несколькими аргументами и её вызова:

  ```javascript
  const showCurrentDay = (month, day) => {
    console.log(`Today is: ${month} ${day}`);
  }

  showDate('January', '29');
  ```

  <pre class='hexlet-basics-output'>Today is: January 29</pre>

  Главное — помнить про порядок: в каком порядке аргументы стоят при определении функции, в таком же порядке они должны передаваться при вызове.

  Аргументы можно и не передавать или передать только часть, тогда их значением станет `undefined`. Это поведение немного необычно, так как в большинстве языков так делать нельзя.

instructions: |

  Сэм составляет множество карт, и ему часто нужно выводить на экран повторяющиеся символы для визуализации маршрутов. Например, так Сэм иллюстрирует узкие дороги между городами:

  ```
  Meereen =-=-=-=- Myr
  ```

  А так иллюстрирует широкие трассы:

  ```
  Vaes Dothrak ======== Vahar
  ```

  В [документации PHP](http://php.net/manual/ru/function.str-repeat.php) он нашёл функцию `str_repeat`. Она принимает два аргумента: строку и число, и возвращает повторяющуюся строку. Вот как он использует её:

  ```php
  <?php

  print_r(str_repeat("=-", 4));
  ```

  <pre class='hexlet-basics-output'>=-=-=-=-</pre>

  Сэм не очень доволен. Ему нужно нарисовать сотни маршрутов разной длины с разными символами. Неудобно вызывать сотни раз `str_repeat` внутри вызова `print_r`.

  Напишите для Сэма функцию `printSeq`, которая сама выводит на экран получившиеся повторения. Она принимает два аргумента — строку и число, и выводит повторяющуюся строку на экран. Для генерации строки используйте `str_repeat`.

  Вот пример того, как Сэм будет использовать написанную вами `printSeq`:

  ```php
  <?php

  printSeq("=-", 4);
  ```

  <pre class='hexlet-basics-output'>=-=-=-=-</pre>

tips: []
