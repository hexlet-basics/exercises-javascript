---

name: Optional function parameters
theory: |

  In programming, many functions and methods have parameters that are rarely changed. In such cases, these parameters are given default values that can be changed as needed. This reduces the amount of identical code a bit. An example:

  ```javascript
  // Exponentiation function.
  // The second parameter is 2 by default
  const pow = (x, base = 2) => {
    return x ** base;
  };
  // 3 to the second power (two is set by default)
  pow(3); // 9
  // three to the third power
  pow(3, 3); // 27
  ```

  The default value looks like a normal assignment in the definition. It only works if the parameter is not passed. You should get used to it. The default value can be even when there is only one parameter:

  ```javascript
  const print = (text = 'nothing') => console.log(text);

  print(); // "nothing"
  print("Hexlet"); // "Hexlet"
  ```

  A parameter, with default values, can be as many as you want:

  ```javascript
  const f = (a = 5, b = 10, c = 100) => { ... }
  ```

  The default values have one limitation. They must go at the very end of the parameter list. From the syntax point of view, it is impossible to create a function that will have a mandatory parameter next to the optional one:

  ```javascript
  // Such code will terminate with an error
  const f = (a = 5, b = 10, c = 100, x) => { ... }
  // As well as this one
  const f = (a = 5, x, b = 10, c = 100) => { ... }

  // But this one will work
  const f = (x, a = 5, b = 10, c = 100) => { ... }

  // This one will work too
  const f = (x, y, a = 5, b = 10, c = 100) => { ... }
  ```

instructions: |

  Implement the `getHiddenCard()` function, which inputs the credit card number (consisting of 16 digits) as a string and returns its hidden version, which can be used on the website to display. If the original card had the number *2034399002125581*,  then the hidden version looks like *\*\*\*\*5581*. In other words, the function replaces the first 12 digits with asterisks. The number of asterisks is controlled by a second optional parameter. The default value is 4

  ```javascript
  // The credit card is transmitted inside as a string
  getHiddenCard("1234567812345678", 2); // "**5678"
  getHiddenCard("1234567812345678", 3); // "***5678"
  getHiddenCard('1234567812345678');    // "****5678"
  getHiddenCard('2034399002121100', 1); // "*1100"
  ```

  To complete the task, you'll need the `repeat` string method, which repeats the string as many times as specified

  ```javascript
  "+".repeat(5); // "+++++"
  "o".repeat(3); // "ooo"
  ```
