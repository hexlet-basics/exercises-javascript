---

name: Математические функции JS
theory: |

  Объяснение функций в JS немного осложняется структурой языка. Изначально он появился в браузерах и имел сильно ограниченные возможности по отношению к языкм общего назначения. Со временем все изменилось и JS стал мощным языком захвативший клиентскую разработку и активно использующийся на сервере, но наследие осталось, так как нужно поддерживать обратную совместимость. Поэтому в некоторых местах есть несостыковки, которые нельзя объяснить системой, можно только махнуть рукой и сказать "так исторически сложилось".

  К подобным "местам" относятся математические функции. В предыдущем задании мы использовали самописную функцию `pow` (но сами ее не писали), а теперь давайте рассмотрим ее версию, встроенную в сам язык.

  ```javascript
  Math.pow(2, 3); // 8
  ```

  Что такое `Math`? Технически это объект доступный из любого места программы, но перед тем как говорить об объектах, нужно проделать очень большой путь. Сейчас достаточно запомнить, что функции для математических операций вызываются через `Math.`. Наличие этой приставки, никак не влияет на понятие функции, которое мы рассмотрели ранее и будем рассматривать позже.

  Полный список функций Math доступен в [документации](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math). О том как ее правильно читать, мы поговорим далее.

instructions: |

  Сем рассчитывал количество вражеских солдат находящихся в близнецах и случайно перепутал знаки операций. Его рассчеты оказались верными, не считая того, что результат получился отрицательным. Помогите Сему найти модуль числа бойцов. Выведите на экран, модуль числа, находящегося в переменной `soldiersCount` используя функцию [Math.abs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/abs). Эта функция возвраащет модуль переданного числа:

    ```javascript
    Math.abs(-3); // 3
    ```

tips: []

definitions:
  - name: Функция
    description: "операция, способная принимать данные и возвращать результат; функция вызывается так: `foo()`."
  - name: Аргумент
    description: "информация, которую функция получает при вызове. Например, `foo(42)` — передача аргумента `42` функции `foo`"
