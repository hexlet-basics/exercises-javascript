---

name: Default parameters
theory: |

  Consiter the `round()` function, which rounds an integer:

  ```javascript
  const result = round(10.25, 0); // 10
  ```

  We pass two parameters to it: the number to round and the accuracy of rounding. `0` means that it rounds up to an integer, and the fractional part is simply discarded.

  In most cases, we need to round up exactly to an integer (and not to tenths, for example), so designers of `round()` function have made the second parameter **optional** and set it to the **default value `0`**. So, you may not specify the second parameter, and the result will be the same:

  ```javascript
  const result = round(10.25); // 10
  ```

  We can specify an accuracy passing other value:

  ```javascript
  // rounding to one decimal place
  const result = round(10.25, 1); // 10.3
  ```

  If a JavaScript function accepts optional arguments, they always come after the required ones. Their number varies depending on the function itself, but they always go next to each other and at the end of the list of arguments.

instructions: |

  Round up the value of `number` constant to two decimal places and print the result.

tips: []

definitions:
  - name: Default parameter
    description: is an optional function parameter
