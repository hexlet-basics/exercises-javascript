---

name: else
theory: |

  Попробуем изменить функцию из предыдущего примера так, чтобы она возвращала не просто тип предложения, а целую строку `Sentence is normal` или `Sentence is question`.

  ```javascript
  const getTypeOfSentence = (sentence) => {
    const lastChar = sentence[sentence.length - 1];

    let sentenceType;
    if (lastChar === '?') {
      sentenceType = 'question';
    } else {
      sentenceType = 'normal';
    }

    return `Sentence is ${sentenceType}`;
  }

  getTypeOfSentence('Hodor');  // Sentence is normal
  getTypeOfSentence('Hodor?'); // Sentence is question
  ```

  Мы добавили `else` и новый блок с фигурными скобками. Этот блок выполнится только если условие в `if` — ложь.

  "Else" переводится «иначе», «в ином случае».

instructions: |

  Реализуйте функцию `buildUrl()`, которая принимает на вход адрес страницы (без указания домена) и имя домена, а возвращает полный url со схемой https.

  Примеры вызова:

  ```javascript
  buildUrl('pages/about', 'hexlet.io'); // 'https://hexlet.io/pages/about'
  buildUrl('/pages/about', 'hexlet.io'); // 'https://hexlet.io/pages/about'

  // В конце обязателен слеш
  buildUrl('/', 'ru.code-basics.com'); // 'https://ru.code-basics.com/'
  buildUrl('', 'ru.code-basics.com'); // 'https://ru.code-basics.com/'
  ```

  В функцию могут попадать адреса с ведущим слешом `/` и без него. Задача функции обрабатывать эту ситуацию, чтобы слеш не дублировался.

  Для реализации этой функции вам могут понадобится функции [slice](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/slice) и [startsWith](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith)

tips: []

definitions:
  - name: "else"
    description: "способ задать блок кода, который будет выполнен если условие с `if` не удовлетворено"
