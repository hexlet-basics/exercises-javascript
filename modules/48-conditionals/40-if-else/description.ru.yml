---

name: else
theory: |

  Напишем функцию `getDescriptionOfSentence()`, которая анализирует текст и возвращает описание его тона: для обычных предложений – *General sentence*, для вопросительных – *Question sentence*.

  ```javascript
    getTypeOfSentence('Hodor');  // General sentence
    getTypeOfSentence('Hodor?'); // Question sentence
  ```

  Реализация функции:

  ```javascript
  const getTypeOfSentence = (sentence) => {
    let sentenceType;
    // Предикат проверяющий окончание текста
    // Если он оканчивается на символ '?', то вернется true,
    // иначе false
    if (sentence.endsWith('?')) {
      sentenceType = 'Question';
    } else {
      sentenceType = 'General';
    }

    return `${sentenceType} sentence`;
  }
  ```

  Мы добавили ключевое слово `else` и новый блок с фигурными скобками. Этот блок выполнится только если условие в `if` — ложь.

  Существует два способа оформления конструкции *if-else*. С помощью отрицания можно изменить порядок блоков:

  ```javascript
  const getTypeOfSentence = (sentence) => {
    let sentenceType;
    // Добавилось отрицание
    // Содержимое else переехало в if и наоборот
    if (!sentence.endsWith('?')) {
      sentenceType = 'General';
    } else {
      sentenceType = 'Question';
    }

    return `${sentenceType} sentence`;
  }
  ```

  Какой способ предпочтительнее? Человеческому мозгу проще мыслить прямолинейно, а не через отрицание. Всегда старайтесь выбирать проверку, которая не содержит отрицаний, и подстраивайте содержимое блоков под нее.

instructions: |

  Реализуйте функцию `buildUrl()`, которая принимает на вход адрес страницы (без указания домена) и имя домена, а возвращает полный url со схемой https.

  Примеры вызова:

  ```javascript
  buildUrl('pages/about', 'hexlet.io'); // 'https://hexlet.io/pages/about'
  buildUrl('/pages/about', 'hexlet.io'); // 'https://hexlet.io/pages/about'

  // Для главной страницы слэш в конце обязателен
  buildUrl('/', 'ru.code-basics.com'); // 'https://ru.code-basics.com/'
  buildUrl('', 'ru.code-basics.com'); // 'https://ru.code-basics.com/'
  ```

  Первым параметром в функцию могут быть переданы адреса с ведущим слешом `/` и без него. Задача функции обрабатывать эту ситуацию, чтобы слеш не дублировался.

  Для реализации этой функции вам могут понадобится методы [slice()](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/slice) и [startsWith()](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith).

tips: []

definitions:
  - name: "else"
    description: "способ задать блок кода, который будет выполнен если условие с `if` не удовлетворено"
